"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib

hash_set = set()


def str_hash_generator(str):
    for s in range(len(str)):
        for n in range(s+1, len(str) + 1):
            if n in hash_set:
                continue
            else:
                if n not in hash_set and s != n and str[s:n] != str:
                    hash_set.add(hashlib.sha256(str[s:n].encode()).hexdigest())
                    print(str[s:n])
    return hash_set


if __name__ == "__main__":
    str = input("Введите строку: ")
    str_hash_generator(str)
    # не понял как в цикле функции не дать пропечатать дубль строки
    print(f"Уникальных подстрок в строке {str}: ", len(hash_set))